@ladder
Feature: ladder New Meta

@StepDef
#########################################################################################
#----------------------------------------------------------------------------------------
#Verifies current page is ladder page. All Variables are defined inside config.meta file.
#----------------------------------------------------------------------------------------
Scenario:I go to the ladder page
Given I navigate to module ladder
  And heading should be "Cash Ladder"
  And smallmenubar should be displayed
  And perspective selector should be displayed
  And balanceType selector should be displayed
  And dateRange should be displayed
  And I wait for ladderGrid text
  And I wait for page to load

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to verify start date and CBD is same. Start Date is a variable read from config.meta file.
#-----------------------------------------------------------------------------------------------
Scenario: I verify start date is equal to "<CBD>"
    And cbd is defined by javascript "moment().format("LL")"
    And startDate is defined by javascript "(function(){ return $('stl-ladder-datepicker p').text().split('-')[0].trim()})()"
    And startDate should be "$<CBD>"

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to verify end date
#-----------------------------------------------------------------------------------------------
Scenario: I verify end date is equal to "<CBD>"
	  And cbd is defined by javascript "moment().format("LL")"
    And endDate is defined by javascript "(function(){ return $('stl-ladder-datepicker p').text().split('-')[1].trim()})()"
	  And endDate should be "$<CBD>"

@StepDef
###############################################################
#--------------------------------------------------------------
#Step to evaluate start and end date difference
#Example: difference between start and end date is of "10" days
#--------------------------------------------------------------
Scenario: difference between start and end date is of "<days>" days
    And expected end date is defined by javascript
     """
      (function() {
        var m = moment();
        var myDate = new Date();
        var newDate = moment("${startDate}");
         m.set(newDate.toObject());
         return m.add($<days>, 'days').format("LL");
       })();
     """
	 And endDate is defined by javascript
		  """
		  (function() {
		  var m = moment();
		  var myDate = new Date();
		  var newDate = moment($('stl-ladder-datepicker p').text().split('-')[1].trim());      m.set(newDate.toObject());
		  return m.format('LL')
		})();
      """
	And endDate should be expected end date
   #And expected end date is defined by system process "java -Ddate="${startDate}" -Ddifference=10 -jar C:\QaAutomation\Utilities\getEndDate.jar"
   #And endDate should be expected end date

@StepDef
#################################################################
#----------------------------------------------------------------
#Step to verify can not select end date previous to starting date
#----------------------------------------------------------------
Scenario: I cannot select end date which is earlier than start date
  And I scroll to top of page
  And I click end date calender
  And previous date is defined by javascript
    """
    (function getDate () {
    var disabledDate=[];var m = moment();
    var myDate = new Date();
    var newDate = moment("${startDate}");
    m.set(newDate.toObject());
    var my =	m.subtract(1, 'days').format("D");
    $('[class=" table-condensed"] > tbody  > tr > td').each(function(index) { if($(this).text() == my) {
      disabledDate.push(index);}});
      return $('[class=" table-condensed"] > tbody  > tr > td:eq('+disabledDate[0]+')').attr('class')
  //    return $('[class=" table-condensed"] > tbody  > tr:nth-child(2) > td:eq(3)').attr('class')
    })();
    """
  And previous date should contain "disabled day"
  And I click heading

@StepDef
####################################################
#---------------------------------------------------
#Step to verify no data present on ladder
#---------------------------------------------------
Scenario: I should not get data on ladder
  And I wait 3 seconds
	And noRows is defined by javascript
  """
    (function(){
      return ($('stl-ladder-grid [class="ag-pinned-left-cols-viewport"] [row-index="0"]').length==0);
    })()
  """
  And noRows should be "true"

@StepDef
###########################################
#------------------------------------------
#Step to verify current page is ladder page
#------------------------------------------
Scenario: I am on the ladder page
  Given heading should be "Cash Ladder"

@StepDef
#######################################################################################
#--------------------------------------------------------------------------------------
#Sets perspectives
#--------------------------------------------------------------------------------------
Scenario:I set perspective "<setPerspective>"
  And I scroll to top of page
 And setPerspective is "$<setPerspective>"
 And Value is present is defined by javascript "(function() {return "$<setPerspective>" != "${selectedPerspective}"})();"
 And I select perspective "$<setPerspective>" if Value is present
 And I wait for page to load
 And I wait 3 seconds

@StepDef
########################################################################
#-----------------------------------------------------------------------
#Step to select perspective and verification of the same after selection
#Example: And I select perspective "Fund/Currency/Account"
#-----------------------------------------------------------------------
Scenario: I select perspective "<perspective>"
  And I scroll to top of page
  ##WA##And I select "$<perspective>" in perspective selector
  And I click perspective selector
  And perspectiveOption can be located by xpath "//mat-option//span[text()[normalize-space() ="$<perspective>"]]"
  And I click perspectiveOption
  And selectedPerspective is "$<perspective>"
  ##WA##Temp Revision: As discussed 12/11 STRAT-271/274
  ##WA##And I refresh the current page
  And I wait for page to load
  And I wait 3 seconds

@StepDef
########################################################################
#-----------------------------------------------------------------------
#Step to verify selected option in perspective selector
#Example: And I verify selected perspective is "Fund/Currency/Account"
#-----------------------------------------------------------------------
Scenario: I verify selected perspective is "<perspective>"
  And perspective selector should be "$<perspective>"
  #And perspectiveMatch is defined by javascript
  #"""
#  (function(){
#    var perspectiveSelctorNode=$('label:contains("Perspective")').closest("div").find('select');
#    var value=perspectiveSelctorNode.val();
#    var result=false;
#    var selectedPerspective=perspectiveSelctorNode.find('option[value="'+value+'"]').text()
#    if(selectedPerspective=="$<perspective>")
#      result=true;
#    return result;
#  })()
#  """
#  And perspectiveMatch should be "true"

@StepDef
#######################################################################################
#--------------------------------------------------------------------------------------
#Sets balance types
#--------------------------------------------------------------------------------------
Scenario:I set balanceType "<setBalanceType>"
  And I scroll to top of page
  And setBalanceType is "$<setBalanceType>"
  And Value is present is defined by javascript "(function() {return "$<setBalanceType>" != "${balances}"})();"
  And I select balanceType "$<setBalanceType>" if Value is present

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to select multiple balance types
#Example: And I select balanceType "Projected Balance - STANDARD"
#Example: And I select balanceType "Projected Balance - STANDARD:Projected Balance - CUMULATIVE"
#-----------------------------------------------------------------------------------------------
Scenario: I select balanceType "<balanceTypes>"
  And I clears balanceType selected
  And balances is "$<balanceTypes>"
  And I select balanceType as "${selectbalance}" for each selectbalance in balances delimited by ":"
  ##WA##Temp Revision: As discussed 12/11 STRAT-271/274
  ##WA##And I refresh the current page
  And I wait for page to load

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to select multiple balance types
#Example: And I select balanceType "Projected Balance - STANDARD"
#Example: And I select balanceType "Projected Balance - STANDARD:Projected Balance - CUMULATIVE"
#-----------------------------------------------------------------------------------------------
Scenario: I select balanceType as "<balanceTypeIs>"
  And I scroll to top of page
  And balanceTypesAre is "$<balanceTypeIs>"
  And I select "${balanceTypeToBeSelected}" balance type in selector for each balanceTypeToBeSelected in balanceTypesAre delimited by ":"
  And I wait 3 seconds


@StepDef
Scenario:I select "<balanceType>" balance type in selector
  And I scroll to top of page
  And I click balance type selector
  And I type "$<balanceType>" in balance type selector
  And I send "ENTER" to balance type selector
  And I wait for page to load


@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to verify multiple balance types
#Example: And I verify balanceType "Projected Balance - STANDARD"
#Example: And I verify balanceType "Projected Balance - STANDARD:Projected Balance - CUMULATIVE"
#-----------------------------------------------------------------------------------------------
Scenario: I verify balanceType "<balanceTypes>"
  And result is defined by javascript
  """
  (function(){
	var balances = "$<balanceTypes>";
	var balanceTypeArray = balances.split(':');
	var totalBalances=balanceTypeArray.length;
	var matched=0;
	var selectedOptionNode=$('label:contains("Balance Types")').closest('div').find('type-ahead span[class*="type-ahead-badge btn badge badge-primary"]');
	var searchOptionNode=$('label:contains("Balance Types")').closest('div').find('type-ahead input');
	var result=false;
	selectedOptionNode.each(function(){
		console.log("Balance selected: "+$(this).text().substring(0, $(this).first().text().length-1).trim());
		if(balanceTypeArray.includes($(this).text().substring(0, $(this).first().text().length-1).trim())){
			matched++;
			console.log(matched);
		}
	});
	if(matched==totalBalances && matched==selectedOptionNode.length && searchOptionNode.val()=="")
		result=true;

	return result;
})()
  """
  And result should be "true"

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to remove grouping
##-------------------------------------------------------------
Scenario:I remove grouping
  And I wait 2 seconds
  And groupingPresent is defined by javascript "(function(){return $('span:contains("Group").ag-header-cell-text').length==1})()"
  And I remove grouping from ladder while groupingPresent using 2 second delay

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to remove grouping
##-------------------------------------------------------------
Scenario:I remove grouping from ladder
  And I execute javascript
  """
  (function() {
  $('stl-ladder-grid [col-id*="Fund"] span[class="ag-icon ag-icon-menu"]').get(0).click();
  })()
  """
  And notOnGroupTab is defined by javascript "!$('[ref="tabHeader"] [class="ag-icon ag-icon-menu"]').parent().hasClass("ag-tab-selected")"
  And I click group menu if notOnGroupTab
  And groupingOption can be located by javascript "$('[ref="tabBody"] span:contains("Group")').get(0)"
  And I wait for groupingOption
  And I click groupingOption

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to select grouping
##-------------------------------------------------------------
Scenario:I select grouping
  And I wait 2 seconds
  And groupingNotPresent is defined by javascript "(function(){return $('span:contains("Group").ag-header-cell-text').length==0})()"
  And I select grouping from ladder while groupingNotPresent using 2 second delay

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to select grouping
##-------------------------------------------------------------
Scenario:I select grouping from ladder
  And I execute javascript
  """
  (function() {
  $('stl-ladder-grid [col-id*="Fund"] span[class="ag-icon ag-icon-menu"]').get(0).click();
  })()
  """
  And notOnGroupTab is defined by javascript "!$('[ref="tabHeader"] [class="ag-icon ag-icon-menu"]').parent().hasClass("ag-tab-selected")"
  And I click group menu if notOnGroupTab
  And groupingOption can be located by javascript "$('[ref="tabBody"] span:contains("Group")').get(0)"
  And I wait for groupingOption
  And I click groupingOption

@StepDef
####################################
#-----------------------------------
#Step to clear selected balancetypes
#-----------------------------------
Scenario: I clears balanceType selected
  And I scroll to top of page
  And balaceTypePresent is defined by javascript "(function(){return $('label:contains("Balance Type")').closest('div').find('type-ahead span').length!=0})()"
  And I send "BACK_SPACE" to balance type selector while balaceTypePresent using 1 second delay and 2 minute timeout
  And I click heading

@StepDef
 ################################################################################################
 #-----------------------------------------------------------------------------------------------
 #Step to select multiple balance types
 #Example: And I select group as "group1:group2"
 #-----------------------------------------------------------------------------------------------
Scenario: I select group as "<groupIs>"
  And groupsAre is "$<groupIs>"
  And I select "${groupToBeSelected}" group in selector for each groupToBeSelected in groupsAre delimited by ":"
  ##WA##Temp Revision: As discussed 12/11 STRAT-271/274
  ##WA##And I refresh the current page
  And I wait for page to load

@StepDef
Scenario:I select "<group>" group in selector
  And I scroll to top of page
  And I click group selector
  And I type "$<group>" in group selector
  And I send "ENTER" to group selector


@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to deselect specific group
#Example: And I deselect group "HPF Group"
#-----------------------------------------------------------------------------------------------
Scenario: I deselect group "<groupIs>"
  And I scroll to top of page
  And deselect group can be located by javascript
    """
    (function test(){
          $('label:contains("Groups")').closest('div').find('type-ahead span[class*="type-ahead-badge btn badge badge-primary"]').each(function(){
          	if($(this).text().substring(0, $(this).first().text().length-1).trim()=="$<groupIs>")
    			remove=$(this).children("span");
          });
    		return remove;
    })()
    """
  And I click deselect group
  And I wait 3 seconds
  ##WA##Temp Revision: As discussed 12/11 STRAT-271/274
  ##WA##And I refresh the current page
  And I wait for page to load
  And I verify group "$<groupIs>" does not exist

@StepDef
@DataTable(header="top")
###########################################
#------------------------------------------
#Step to verify group is present
#------------------------------------------
Scenario: I verify group is present
    And I verify group "${data[groupName]}" exist for each data record
    And I click heading

@StepDef
###########################################
#------------------------------------------
#Step to verify group exist
#------------------------------------------
Scenario: I verify group "<groupName>" exist
  And groupPresent is defined by javascript "(function(){ return $('label:contains("Groups")').closest('div').find('type-ahead span[class*="type-ahead-badge btn badge badge-primary"]:contains("$<groupName>")').is(":visible")})()"
  And groupPresent should be "true"

@StepDef
@DataTable(header="top")
###########################################
#------------------------------------------
#Step to verify group is absent
#------------------------------------------
Scenario: I verify group is absent
    And I verify group "${data[groupName]}" does not exist for each data record
    And I click heading

@StepDef
###########################################
#------------------------------------------
#Step to verify group does not exist
#------------------------------------------
Scenario: I verify group "<groupName>" does not exist
  And groupAbsent is defined by javascript "(function(){ return !$('label:contains("Groups")').closest('div').find('type-ahead span[class*="type-ahead-badge btn badge badge-primary"]:contains("$<groupName>")').is(":visible")})()"
  And groupAbsent should be "true"


@StepDef
#######################################################################################
#--------------------------------------------------------------------------------------
#Step to verify group can be or selected on ladder dashboard
#Example: And I verify group "HPF Group" can be or selected on ladder dashboard
#--------------------------------------------------------------------------------------
Scenario:I verify group "<groupName>" can be or selected on ladder dashboard
  And groupSelect is defined by javascript
  """
  (function(){
  var result=false;
    $('label:contains("Groups")').closest('div').find('.dropdown-menu button.dropdown-item').each(function(){
    if($(this).text().trim()=="$<groupName>"){
      result=true;
    }else if($('label:contains("Groups")').closest('div').find('type-ahead span[class*="type-ahead-badge btn badge badge-primary"]:contains("$<groupName>")').is(":visible")){
      result=true;
    }
    });
    return result;
  })()
  """
  And groupSelect should be "true"

@StepDef
###########################################
#------------------------------------------
#Step to remove one group
#------------------------------------------
Scenario: I remove one group
   And I scroll to top of page
   And I send "BACK_SPACE" to group selector
   And I click heading
   ##WA##Temp Revision: As discussed 12/11 STRAT-271/274
   ##WA##And I refresh the current page
   And I wait for page to load


@StepDef
###########################################
#------------------------------------------
#Step to remove two balanceType
#------------------------------------------
Scenario: I remove two balanceType
  And I scroll to top of page
  And I send "BACK_SPACE" to balance type selector
  And I click heading
  And I send "BACK_SPACE" to balance type selector
  And I click heading
  ##WA##Temp Revision: As discussed 12/11 STRAT-271/274
  ##WA##And I refresh the current page
  And I wait for page to load


@StepDef
###############################################
#----------------------------------------------
#Step to extract ladder data by scrolling on UI
#It includes check negavtive numbers are in red as well as bold in subtotal
##WA##Temp Revision: Remove Bold check for subtotal As discussed 29/11
#----------------------------------------------
Scenario: I get the ladder data from UI
  And the result is defined by javascript
  """
  (function setTimeout () {
  var rowCount = $('stl-ladder-grid .ag-body-viewport > .ag-body-container > [role="row"]').length;
  	var columnCount = $('[class="ag-header-container"] [class="ag-header-cell-label"]').length
  	 y = [];failedNegativeCheck=[];checkBold=[];failedBoldCheck=[];
  	var fixedheaderCount = $('.ag-pinned-left-header [class="ag-header-cell-label"]').length
  	 x = [];n=[];
     var result="";
     currentPage=parseInt($('span [ref="lbCurrent"]').text());
  		$('.ag-pinned-left-header [class="ag-header-cell-label"]').each(function(){console.log($(this).text());x.push($( this ).text().trim())})

  $('.ag-header-container [class="ag-header-cell ag-header-cell-sortable"]').each(function(){console.log($(this).attr("col-id").trim().replace(/  /g,""));x.push($( this ).attr("col-id").trim().replace(/  /g,""));n.push($( this ).attr("col-id").trim().replace(/  /g,""))})
  		y.push(x);
  		for (i = 1; i <= rowCount; i++) {
  				x = [];
  				for(k = 1; k<= fixedheaderCount; k++) {
          if ($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+') [role="gridcell"]:nth-child('+k+')').text().trim().indexOf('(')>=0){
    					 checkBold.push(i);}
  				console.log($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+') [role="gridcell"]:nth-child('+k+')').text())
  				x.push($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+') [role="gridcell"]:nth-child('+k+')').text().trim());
  				}
  				for(c in n) {
                				x.push($('[class*="ag-body-container"] [role="row"]:nth-child('+i+') [col-id="'+ n[c]+'"]').text());
                        if (checkBold.includes(i))
                       if($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+')').hasClass('stl-ladder-grid-bold-font')!=true)
      								    failedBoldCheck.push($( this ).text().trim());
                        if ($('[class*="ag-body-container"] [role="row"]:nth-child('+i+') [col-id="'+ n[c]+'"]').text().trim().indexOf("-") >= 0)
                          if ($('[class*="ag-body-container"] [role="row"]:nth-child('+i+') [col-id="'+ n[c]+'"]').css('color') != "rgb(224, 67, 62)")
                            failedNegativeCheck.push($( this ).text().trim());
              };
  				    if(x[1]!=""||x[0]!=""||x[2]!=""||x[3]!=""){console.log("yes");y.push(x)}
              console.log("negativeCheckFail= "+failedNegativeCheck.length);
              /*Temp Revision: Remove Bold check for subtotal
              if(failedNegativeCheck.length==0 && failedBoldCheck.length==0 )*/
              if(failedNegativeCheck.length==0 )
                if(currentPage==pageCount && currentPage<=totalPage)
  			             result = "Done";
  			}

  	return result;
  	})();
    """
  Then the result should be "Done"
  And I execute javascript
  """
  (function(){offset=$('[class="ag-header-cell-label"]').offset()
  offset.left += 1000;
  offset.top -= 200;
  $('[class*="ag-body-viewport"]').animate({
      scrollLeft: offset.left
  });})()
  """
  And I wait 5 seconds


@StepDef
##############################################################
#-------------------------------------------------------------
#Step to extract balances from ladder grid
#-------------------------------------------------------------
Scenario: I extracts balances of ladder grid
  And I wait 3 seconds
  And I execute javascript "repeat=1"
  And takeExtract is defined by javascript "(function(){ console.log(repeat); return repeat!=0 })()"
  And I extracts balances from ladder grid while takeExtract using 1000 millisecond delay and 10 minute timeout
  And I execute javascript
  """
  offset.left -= 100000;
  offset.top -= 200;
  $('[class*="ag-body-viewport"]').animate({
      scrollLeft: offset.left
  });
  """

  @StepDef
  Scenario: I extracts balances from ladder grid

    And the executionResult is defined by javascript
    """
    (function(){
      var str="";
      function getData() {
      console.log("ada");
      var rowCount = $('stl-ladder-grid .ag-body-viewport > .ag-body-container > [role="row"]').length;
	    var columnCount = $('[class="ag-header-container"] [class="ag-header-cell-label"]').length;
	    var fixedheaderCount = $('.ag-pinned-left-header [class="ag-header-cell-label"]').length;
		  x = [];n=[];failedNegativeCheck=[];checkBold=[];failedBoldCheck=[];
          duplicate = 0;
          for (i = 1; i <=1; i++) {
  		 console.log("i is ", i);
  		$('.ag-header-container [class="ag-header-cell ag-header-cell-sortable"]').each(function(){console.log($(this).attr("col-id").trim().replace(/  /g,""));x.push($( this ).attr("col-id").trim().replace(/  /g,""));n.push($( this ).attr("col-id").trim().replace(/  /g,""))});
			for(c in n) {console.log(n[c])}
  			for(l=0;l<x.length;l++)
  				{  if (y[0].indexOf(x[l]) >= 0) { duplicate++ };if (y[0].indexOf(x[l]) < 0) { y[0].push(x[l]) } }
  		}

          for (i = 1; i <= rowCount; i++) {
              x = [];m=[];
              for(k = 1; k<= fixedheaderCount; k++) {
              if ($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+') [role="gridcell"]:nth-child('+k+')').text().trim().indexOf('(')>=0){
    					 checkBold.push(i);}
             console.log($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+') [role="gridcell"]:nth-child('+k+')').text());
				m.push($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+') [role="gridcell"]:nth-child('+k+')').text().trim());
              };
              console.log("header is------>"+m);
			  if(m[1]!=""||m[0]!=""||m[2]!=""||m[3]!=""){console.log("yes");
              for(c in n) {
              				x.push($('[class*="ag-body-container"] [role="row"]:nth-child('+i+') [col-id="'+ n[c]+'"]').text());
                      if (checkBold.includes(i))
                       if($('[class="ag-pinned-left-cols-container"] [role="row"]:nth-child('+i+')').hasClass('stl-ladder-grid-bold-font')!=true)
      								    failedBoldCheck.push($( this ).text().trim());
                      if ($('[class*="ag-body-container"] [role="row"]:nth-child('+i+') [col-id="'+ n[c]+'"]').text().trim().indexOf("-") >= 0)
                        if ($('[class*="ag-body-container"] [role="row"]:nth-child('+i+') [col-id="'+ n[c]+'"]').css('color') != "rgb(224, 67, 62)")
                          failedNegativeCheck.push($( this ).text().trim());

            };
            console.log("row is---->"+x);
             x.splice(0, duplicate); repeat = x.length;
             console.log("Duplicate------>:"+duplicate+"repeat"+repeat);
             if (x.length > 0) {
			 console.log("test ------>x"+x);
             for(b in x) { y[i].push(x[b]) }
             }
			 }
            };
            /*Temp Revision: Remove Bold check for subtotal
            if(failedNegativeCheck.length==0 && failedBoldCheck.length==0 )*/
            if(failedNegativeCheck.length==0)
            str = "Done";
          };
          getData()
       return str;
      })();
    """
    And the executionResult should be "Done"
    Then I execute javascript
      """
      (function(){
      offset.left += 800;
      offset.top -= 200;
      $('[class*="ag-body-viewport"]').animate({
          scrollLeft: offset.left
      });})()
      """
      And I wait 5 seconds

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to combine results
# EXAMPLE: And I extract total ladder balance data
#-------------------------------------------------------------
Scenario:  I extract total ladder balance data
  And I execute javascript "$('stl-ladder-grid [ref="btNext"]').click();pageCount++;"
  And I wait 5 seconds
   And I get the ladder data from UI
   And I extracts balances of ladder grid
   And I execute javascript
   """
     (function(){
     function swap(input, index_A, index_B) {
     var temp = input[index_A];
     input[index_A] = input[index_B];
     input[index_B] = temp;
     }
     for(i in z[0][0]) {console.log(z[0][0][i]) ;console.log(y[0].indexOf(z[0][0][i]));index=y[0].indexOf(z[0][0][i]); for( j in y)
     {console.log(y[j][index]); console.log(index+"and"+i);swap(y[j],index,i)} }
     })()
  """
  And I execute javascript
  """
  offset.left -= 100000;
  offset.top -= 200;
  $('[class*="ag-body-viewport"]').animate({
      scrollLeft: offset.left
  });
  """
  And I execute javascript "z.push(y)"



@StepDef
##############################################################
#-------------------------------------------------------------
#Step to combine results
# EXAMPLE: And I verify ladder result for "test1"
#-------------------------------------------------------------
Scenario:  I verify ladder result for "<testcase>"
  And I wait for first row of ladderGrid
  And I execute javascript "z=[];totalPage=parseInt($('span [ref="lbTotal"]').text());pageCount=1;"
  And I get the ladder data from UI
  And I extracts balances of ladder grid
  And I execute javascript "z.push(y)"
  And button disabled is defined by javascript
  """
  (function(){
    return $('stl-ladder-grid [ref="btNext"]').attr("disabled") != "disabled"
  })();
  """
  And I extract total ladder balance data while button disabled using 60 minute timeout
  And I execute javascript "$('stl-ladder-grid [ref="btFirst"]').click()"
  Then I verify execution results for "$<testcase>"


@StepDef
##################################################################
#-----------------------------------------------------------------
#Step to create csv and compare actual result with expected result
#Example: And I verify execution results for "TC0012"
#-----------------------------------------------------------------
Scenario: I verify execution results for "<testcaseNo>"
    And I execute javascript
    """
    n=[]; for(b in z) { for( c in z[b] ) { n.push(z[b][c]); } }
    data = n;
      if("${gwen.web.browser}"=="chrome") {
        var csvContent = "data:text/csv;charset=utf-8,";
        data.forEach(function(infoArray, index){
        dataString = infoArray.join(";");
        csvContent += index < data.length ? dataString+ "\n" : dataString;
        });
        var encodedUri = encodeURI(csvContent);
        var link = document.createElement("a");
        link.setAttribute("href", encodedUri);
        link.setAttribute("download", "my_data.csv");
        document.body.appendChild(link);
        link.click();
      }
      if("${gwen.web.browser}"=="IE") {
        var csvContent = "";
        data.forEach(function(infoArray, index){
        dataString = infoArray.join(";");
        csvContent += index < data.length ? dataString+ "\n" : dataString;
        });
      if (navigator.msSaveBlob) {
        navigator.msSaveBlob(new Blob([csvContent], { type: 'text/csv;charset=utf-8;' }), "filename.csv")};
      }
    """
    And I scroll to top of page
    And I check ongoing module for "$<testcaseNo>"
    And I save and compare result for "$<testcaseNo>"
    And testcaseIs is "$<testcaseNo>:''"
    And I verify testresult of testcasesno "${testcaseNoIs}" for each testcaseNoIs in testcaseIs delimited by ":"

@StepDef
Scenario:I check ongoing module for "<testcaseNo>"
    And alertModule is defined by javascript "(function() {return "${moduleName}"=="alerts"})()"
    And amendCancelModule is defined by javascript "(function() {return "${moduleName}"=="amendCancel"})()"
    And subTotalModule is defined by javascript "(function() {return (("${moduleName}"=="subTotal" && "$<testcaseNo>" != "TC001" && "$<testcaseNo>" != "TC002") || ("${moduleName}"=="subTotal1" && "$<testcaseNo>" != "TC001" && "$<testcaseNo>" != "TC002") || ("${moduleName}"=="subTotal2" && "$<testcaseNo>" != "TC001" && "$<testcaseNo>" != "TC002"))})()"
    And favoritesModule is defined by javascript "(function() {return "${moduleName}"=="favorites" && "$<testcaseNo>" == "TC001"})()"
    And alertsHolidayModule is defined by javascript "(function() {return "${moduleName}"=="alertsHoliday"})()"
    And alertsUserGroupsDateRangeModule is defined by javascript "(function() {return "${moduleName}"=="alertsUserGroupsDateRange"})()"
    And otherModule is defined by javascript "(function() {return ("${alertModule}"=="false" && "${amendCancelModule}"=="false" &&  "${subTotalModule}"=="false" && "${favoritesModule}"=="false" && "${alertsHolidayModule}"=="false" && "${alertsUserGroupsDateRangeModule}"=="false")})()"

@StepDef
Scenario: I save and compare result for "<testcaseNo>"
   And I save file using ";" as delimiter with sort on "Value Date;Fund/Account;Status" for "$<testcaseNo>" if alertModule
   And I save file using ";" as delimiter with sort on "Value Date;Fund/Account;Status" for "$<testcaseNo>" if alertsHolidayModule
   And I save file using ";" as delimiter with sort on "Value Date;Fund/Account;Status;Strat Exec Date Time" for "$<testcaseNo>" if alertsUserGroupsDateRangeModule
   And I save file using ";" as delimiter with sort on "Load Time" for "$<testcaseNo>" if amendCancelModule
   And I save file using ";" as delimiter with sort on "Transaction Reference" for "$<testcaseNo>" if subTotalModule
   And I save file using ";" as delimiter with sort on "Value Date;Fund/Account;Status" for "$<testcaseNo>" if favoritesModule
   And I save file using ";" as delimiter with sort on "none" for "$<testcaseNo>" if otherModule
   And I compare result for "$<testcaseNo>"

@StepDef
Scenario: I save file using "<delim>" as delimiter with sort on "<columns>" for "<testcaseNo>"
  And I execute system process "${baseDirectory}bat\moveDefaultDownloadedCsv.bat ${baseDirectory}data ${moduleName} $<testcaseNo>.csv"
  And I execute system process "java -jar ${baseDirectory}\..\..\..\Utilities\JavaExcelComparison\ExcelDiff.jar -csv  "${baseDirectory}data\${moduleName}" "$<testcaseNo>" $<testcaseNo>.xlsx "$<delim>" "-sort=$<columns>" "-debug=no""

@StepDef
Scenario: I compare result for "<testcaseNo>"
  And I execute system process "java -jar ${baseDirectory}..\..\..\Utilities\JavaExcelComparison\ExcelDiff.jar -diff ${moduleName} $<testcaseNo> ${moduleName} $<testcaseNo> ${baseDirectory}data ${baseDirectory}..\..\..\Utilities\JavaExcelComparison "${moduleName}_Comparesheets_Report.csv" "-debug=no""
  And compareResult is defined by system process "${baseDirectory}\bat\resultParallel.bat ${moduleName}_Comparesheets_Report"


@StepDef
Scenario: I verify testresult of testcasesno "<testcaseNoIs>"
  And value is present is defined by javascript "(function() {return "$<testcaseNoIs>" != "''"})();"
  And I compare result of testcase if value is present
  And my gwen.web.wait.seconds property is "${maxWaitingTimeInSec}"

@StepDef
Scenario:I compare result of testcase
  And verifyResult is defined by javascript "(function() {return "${verifyLater}"=="false"})()"
  And my gwen.web.wait.seconds property is "${minimumWaitingTimeInSec}"
  Then compareResult should match regex ".*,"?[pP][aA][sS][sS]["],.*" if verifyResult
  And my gwen.web.wait.seconds property is "${maxWaitingTimeInSec}"

@StepDef
#-------------------------------------------------------------
#Step to compare result only
#-------------------------------------------------------------
Scenario: I am comparing result of "<testcaseNo>"
  And I execute system process "${baseDirectory}bat\compareResult.bat "${moduleName}" "$<testcaseNo>" "${moduleName}" "${moduleName}" "${baseDirectory}data""
  And compareResult is defined by system process "${baseDirectory}bat\result.bat"
  And testcaseIs is "$<testcaseNo>:''"
  And I verify testresult of testcasesno "${testcaseNoIs}" for each testcaseNoIs in testcaseIs delimited by ":"
  And testcaseIs is "$<testcaseNo>:''"
	And I verify testresult of testcases "${testcaseNoIs}" for each testcaseNoIs in testcaseIs delimited by ":"

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to go to page no
# EXAMPLE: And I go to page "1"
#-------------------------------------------------------------
Scenario:I go to page "<pageNo>"
  And navigateResult is defined by javascript
    """
    (function(){
        var result="";
    		var	currentPage=parseInt($('span [ref="lbCurrent"]').text());
    			if(currentPage==$<pageNo>){
    				result="Done";
    			}
    			else{
    				$('[ref="btNext"]').click();
    			}
          return result;
      })()
    """
  And navigateResult should be "Done"
  And I wait 3 seconds

@StepDef
##############################################################
#-------------------------------------------------------------
#Step to verify page no
# EXAMPLE: And I verify current page is "1"
#-------------------------------------------------------------
Scenario:I verify current page is "<pageNo>"
  And currentPageNo is defined by javascript "$('span [ref="lbCurrent"]').text()"
  And currentPageNo should be "$<pageNo>"


@StepDef
##############################################################
#-------------------------------------------------------------
#Step to get transaction details of specific date and currency
#Example:And I verify balances csv  for "<testcaseNo>"
#-------------------------------------------------------------
Scenario: I verify balances csv for "<testcaseNo>"
  Given I am on the ladder page
    And I scroll to top of page
    And I wait for first row of ladderGrid
    And I right click first row of ladderGrid
    And I wait for export button
    And I click export button
    And I wait for export to csv button
    And export to csv button should be displayed
    And export to excel button should be displayed
    And dropdownList is defined by javascript "(function(){return $('.ag-menu').length})()"
    And dropdownList should be "2"
    And I click export to csv button
    And I save file using "," as delimiter with sort on "none" for "$<testcaseNo>"
    And I compare result for "$<testcaseNo>"
    And testcaseIs is "$<testcaseNo>:''"
    And I verify testresult of testcasesno "${testcaseNoIs}" for each testcaseNoIs in testcaseIs delimited by ":"

@StepDef
@DataTable(header="top")
#############################################################
#------------------------------------------------------------
#Step to check for the cashflow
#Example: I verify cashflow on ladder
#|startingDate|endDate|perspective|balanceType|ofdate|ofperspective|filter|
#|23/09/2017|23/09/2017|Fund/Currency/Account|Projected Balance - STANDARD|23/09/2017 Projected Balance - STANDARD|HDF:AUD:HDFAUDAC2|Account:HDFAUDAC2|
#------------------------------------------------------------
  Scenario: I verify cashflow on ladder
    And I verify cashflow on ladder with "${data[startingDate]}" "${data[endDate]}" "${data[perspective]}" "${data[balanceType]}" "${data[ofdate]}" "${data[ofperspective]}" "${data[filter]}" for each data record

@StepDef
  Scenario: I verify cashflow on ladder with "<startingDate>" "<endDate>" "<perspective>" "<balanceType>" "<ofdate>" "<ofperspective>" "<filter>"
    And I set ladder daterange from "$<startingDate>" to "$<endDate>"
    And I set perspective "$<perspective>"
    And I select balanceType "$<balanceType>"
    And I apply ladder filter "$<filter>"
    And I open transaction details of "$<ofdate>" and "$<ofperspective>"
    And I remove ladder filter for "$<filter>"

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to verify cbd for user is in red color
#-----------------------------------------------------------------------------------------------
Scenario: I verify cbd for user "<user>" is "<cbd>"
	And region is defined in the ${dbName} database by sql "select LOCATION from usrr where user_id ='${$<user>.userName}'"
	And cbdPersisted is defined in the ${dbName} database by sql "select TO_CHAR(CURRENT_BUS_DATE, 'DD/MM/YYYY') as CURRENT_BUS_DATE from CMS_REF_SYSCONTROL where region_name ='${region}'"
	And cbdPersisted should be "$<cbd>"
  And I wait for first row of ladderGrid
  And I execute javascript "count=1;result="";scrollPos="";scrollLastPos=0;cbdIsRed=false;restIsBlack=false;"
  And formatedCBD is defined by javascript
  """
    (function(){
      var m = moment();
      var myDate = new Date();
      var newDate = moment("$<cbd>", "DD/MM/YYYY");
      m.set(newDate.toObject());
      var newDateIs= m.format("YYYY-MM-DD");
      return newDateIs;
    })()
  """
	And checkCbdISInRed is defined by javascript
	"""
  (function check(){
    function scrollForward(){
      scrollPos=$('stl-ladder-grid .ag-body-viewport').scrollLeft();
      $('stl-ladder-grid .ag-body-viewport').scrollLeft(500*(count++));
      console.log("scrollForward() count="+count);//<30
      }
    scrollLastPos=$('stl-ladder-grid .ag-body-viewport').scrollLeft();
    console.log("  scrollPos="+scrollPos+"  scrollLastPos="+scrollLastPos);
    if (scrollPos!==scrollLastPos){
      if($('.ag-header-row [col-id*="${formatedCBD}"] span[class*=stl-ladder-grid-balance-type-column-header-date]').length!=0){
        $('.ag-header-row [col-id*="${formatedCBD}"] span[class*=stl-ladder-grid-balance-type-column-header-date]').each(function(){
          //console.log("date"+($(this).text()));
          if ($(this).parent().parent().hasClass("stl-ladder-grid-balance-type-column-header-cbd")){
            cbdIsRed=true;
            console.log("in if found red for cbd");
          }else{
          cbdIsRed=false;
            console.log("in else found black for cbd");
          return false;
        }
      });
      }else{
        $('.ag-header-row span[class*=stl-ladder-grid-balance-type-column-header-date]').each(function(){
          //console.log("date"+($(this).text()));
          if (!$(this).parent().parent().hasClass("stl-ladder-grid-balance-type-column-header-cbd")){
            console.log("in else found black for non cbd");
            restIsBlack=true;
          }
        });
      }
      scrollForward();
    }else{
      if(cbdIsRed==true && restIsBlack==true)
      result="Done";
      return result;
    }
    return result;
	})()
	"""
	And checkCbdISInRed should be "Done"
  And I scroll to first column of ladder


@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to verify multiple groups selected
#Example: And I verify selected groups are "HPF Group"
#Example: And I verify selected groups are "Default Group:HPF Group"
#-----------------------------------------------------------------------------------------------
Scenario: I verify selected groups are "<groupsAre>"
  And result is defined by javascript
  """
  (function(){
	var groups = "$<groupsAre>";
	var groupsArray = groups.split(':');
	var totalGroups=groupsArray.length;
	var matched=0;
	var selectedOptionNode=$('label:contains("Groups")').closest('div').find('type-ahead span[class*="type-ahead-badge btn badge badge-primary"]');
	var searchOptionNode=$('label:contains("Groups")').closest('div').find('type-ahead input');
	var result=false;
	selectedOptionNode.each(function(){
		console.log("Group Present: "+$(this).text().substring(0, $(this).first().text().length-1).trim());
		if(groupsArray.includes($(this).text().substring(0, $(this).first().text().length-1).trim())){
			matched++;
			console.log(matched);
		}
	});
	if(matched==totalGroups && matched==selectedOptionNode.length && searchOptionNode.val()=="")
		result=true;

	return result;
})()
  """
  And result should be "true"


@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to scroll to very top of page
#-----------------------------------------------------------------------------------------------
Scenario: I scroll to top of page
  And I execute javascript "window.scrollTo(0, 0);"

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step to scroll to very bottom of page
#-----------------------------------------------------------------------------------------------
Scenario: I scroll to bottom of page
  And I execute javascript "window.scrollTo(0, 10000);"

@StepDef
################################################################################################
#-----------------------------------------------------------------------------------------------
#Step as work around as we are not getting col-id in same format as on display
#-----------------------------------------------------------------------------------------------
Scenario: I get column id for "<dateColumn>"
  And columnId is defined by javascript
  """
  (function(){
      var dateIs="$<dateColumn>".split(" ")[0];
      var m = moment();var myDate = new Date();
      var newDate = moment(dateIs, "DD/MM/YYYY");
      m.set(newDate.toObject());
      var newDateIs= m.format("YYYY-MM-DD");
      var newColumnName="$<dateColumn>".replace(dateIs,newDateIs);
      return newColumnName;
  })()
  """

@StepDef
Scenario: I compare result of "<testcaseNo>" for "<columns>" columns for "<subtestcaseNo>"
  And I execute system process "java -jar ${baseDirectory}..\..\..\Utilities\JavaExcelComparison\ExcelDiff.jar -diff ${moduleName} $<testcaseNo> ${moduleName} $<testcaseNo> ${baseDirectory}data ${baseDirectory}..\..\..\Utilities\JavaExcelComparison "${moduleName}_Comparesheets_Report.csv" "-debug=no" -include="$<columns>" -testCaseName="$<subtestcaseNo>""
  And compareResult is defined by system process "${baseDirectory}\bat\resultParallel.bat ${moduleName}_Comparesheets_Report"
  And testcaseIs is "$<testcaseNo>:''"
  And I verify testresult of testcasesno "${testcaseNoIs}" for each testcaseNoIs in testcaseIs delimited by ":"


@StepDef
Scenario: I sort ascending ladder date column "<columnName>"
  And I get column id for "$<columnName>"
  And I scroll to ladder column "$<columnName>"
  And unsorted is defined by javascript "$('stl-ladder-grid [col-id*="${columnId}"]').find('[ng-reflect-klass*="ag-sort-ascendi"]').hasClass('ag-hidden')"
  And sortOption can be located by javascript "$('stl-ladder-grid [col-id*="${columnId}"].ag-header-cell').get(0)"
  And I SHIFT click sortOption while unsorted using 1 second delay
  And I scroll to first column of ladder

@StepDef
Scenario: I sort descending ladder date column "<columnName>"
  And I get column id for "$<columnName>"
  And I scroll to ladder column "$<columnName>"
  And unsorted is defined by javascript "$('stl-ladder-grid [col-id*="${columnId}"]').find('[ng-reflect-klass*="ag-sort-descend"]').hasClass('ag-hidden')"
  And sortOption can be located by javascript "$('stl-ladder-grid [col-id*="${columnId}"].ag-header-cell').get(0)"
  And I SHIFT click sortOption while unsorted using 1 second delay
  And I scroll to first column of ladder
